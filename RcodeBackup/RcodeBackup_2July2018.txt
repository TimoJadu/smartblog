#project GPX:
  

##Loading the raw data
setwd("C:/subhajit/projectX/PyCharm-GPX")
gpxcontent <- read.csv("gpxcontent.csv")
head(gpxcontent)
##

##Ordering the data as per files and then Time
gpxcontent <- gpxcontent[order(gpxcontent$filename, gpxcontent$time),]
str(gpxcontent)
##

head(gpxcontent$time)
v <- as.POSIXlt(gpxcontent$time[1],"%Y-%m-%d %H:%M:%OS")

timecalc <- function(x){
  as.POSIXlt(x,"%Y-%m-%d %H:%M:%OS")
}

timecalc(gpxcontent$time[1])

gpxcontent$DateTime <- tapply(gpxcontent$time,INDEX = gpxcontent$time, FUN = timecalc)
warnings()
?tapply

##correctly date time formated
gpxcontent$DateTime<- as.POSIXlt(gpxcontent$time,"%Y-%m-%d %H:%M:%OS")

difftime(gpxcontent$DateTime[2],gpxcontent$DateTime[1], units = "secs")

?which

p=1
vect=0
filenameTemp=gpxcontent$filename[1]
for(i in 1:length(gpxcontent$DateTime))
{
  if(i==1) {next()}
  else if(filenameTemp==gpxcontent$filename[i]){
    vect<- c(vect,difftime(gpxcontent$DateTime[i],gpxcontent$DateTime[i-1], units = "secs"))
  }
  else{
    vect<- c(vect,0)
    
  }
  filenameTemp=gpxcontent$filename[i]
}

gpxcontent$TimeDiff<- vect

gpxcontent$DistanceCovered<- gpxcontent$TimeDiff*gpxcontent$speed


TimeDiffCalc<- function(){
  f<- 0
  vrr<- c(0)
  for(i in gpxcontent$DateTime){
    vrr<- c(vrr,i)
    vrr
  }
}

TimeDiffCalc()

unique(gpxcontent$filename)
head(gpxcontent$time)
gpxcontent$speed

dim(gpxcontent)[1]
typeof(gpxcontent)
gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx',]

derivedColumns <- function(){
  x <- vector()
  for(i in dim(gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx',])[1]){
    x[i] <- gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx','id'][i]
  }
  return x
}


# creating an ordered data.frame
#df <- data.frame(category, randtime)
gpxcontent <- gpxcontent[order(gpxcontent$filename, gpxcontent$time),]

# calculating the timedifference
# option 1:
gpxcontent$Tdiff <- unlist(tapply(gpxcontent$time, INDEX = gpxcontent$filename,
                          FUN = function(x) c(0, `units<-`(diff(x), "secs"))))

gpxcontent$Tdiff <- unlist(tapply(gpxcontent$time, INDEX = gpxcontent$filename,
                                  FUN = function(x) c(0, `units<-`(diff(x), "secs"))))
=======================
?tapply
as.difftime(c("0:3:20", "11:23:15"))
z <- as.difftime(c("11:23:12", "11:23:15"), units = "secs")
z
# option 2:
gpxcontent$tdiff <- unlist(tapply(gpxcontent$time, INDEX = gpxcontent$filename,
                          FUN = function(x) c(0, diff(as.double(x)))))


library(data.table)
# creating an ordered/keyed data.table
dt <- data.table(gpxcontent$filename, time, key = c("filename", "time"))

# calculating the timedifference
# option 1:
dt[, tdiff := difftime(randtime, shift(randtime, fill=randtime[1L]), units="secs"), by=category]
# option 2:
dt[, tdiff := c(0, `units<-`(diff(randtime), "secs")), by = category]
# option 3:
dt[ , test := c(0, diff(as.numeric(randtime))), category]





gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx','Time']

difftime(gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx','Time'],gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx','Time'], units = "secs")


gpxcontent[gpxcontent$filename=='activity_19578949_complex_looped.gpx','id'][1]
derivedColumns()

length(gpxcontent$speed)
?which

tms <- c("2:06:00", "3:34:30", "4:12:59", "08:09:10",
         "09:10:11", "10:11:12", "11:12:13")
tms <- c(gpxcontent$time)
gpxcontent$time[1].split
ta <- as.difftime(tms)
?split
split(gpxcontent$time[1]," ")[1]

str_split(gpxcontent$time[1],'\t')[1]
?str_split



dtime <- strptime(gpxcontent$time[2], "%YYYY-%mm-%ddT%HH:%MM:%SSZ")
format(dtime, "%H:%M:%S")

gpxcontent$time <- data.frame(lapply(gpxcontent$time, as.character), stringsAsFactors=FALSE)

?lapply
gpxcontent$time <- lapply(gpxcontent$time, toString)

install.packages("stringr")
?strptime
library("stringr")
str_split(gpxcontent$time," ")[[1]][2]
x <- lapply(gpxcontent$time, str_split(gpxcontent$time, " "))
